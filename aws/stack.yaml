AWSTemplateFormatVersion: '2010-09-09'
Description: Node app
Resources:
    SSHSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: 'Enable SSH access via port 22'
            SecurityGroupIngress:
                -
                    CidrIp: '0.0.0.0/0'
                    Description: 'Allowed from anywhere'
                    FromPort: '22'
                    ToPort: '22'
                    IpProtocol: 'tcp'
    NodeSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: 'Node'
            SecurityGroupIngress:
                -
                    CidrIp: '0.0.0.0/0'
                    Description: 'Allowed from anywhere'
                    FromPort: '3000'
                    ToPort: '3000'
                    IpProtocol: 'tcp'
    HTTPSecurityGroup:
        Type: 'AWS::EC2::SecurityGroup'
        Properties:
            GroupDescription: 'HTPP access'
            SecurityGroupIngress:
                -
                    CidrIp: '0.0.0.0/0'
                    Description: 'Allowed from anywhere'
                    FromPort: '80'
                    ToPort: '80'
                    IpProtocol: 'tcp'                   
    EC2Instance:
        Type: 'AWS::EC2::Instance'
        Properties:
            ImageId: 'ami-02bcbb802e03574ba'
            InstanceType: 't2.micro'
            KeyName: 'julianoalberto'
            SecurityGroupIds:
                - !GetAtt SSHSecurityGroup.GroupId
                - !GetAtt NodeSecurityGroup.GroupId
            UserData:
              Fn::Base64:
                Fn::Join:
                  - ""
                  -
                    - "#!/bin/bash -ex"
                    - "\n"
                    - "sudo yum update -y"
                    - "\n"
                    - "sudo amazon-linux-extras install -y epel"
                    - "\n"
                    - "sudo yum install -y nodejs"
                    - "\n"
                    - "sudo yum install -y git"
                    - "\n"
                    - "cd ~"
                    - "\n"
                    - "git clone https://github.com/julianoalberto/hello-world.git"
                    - "\n"
                    - "cd hello-world"
                    - "\n"
                    - "npm install"
                    - "\n"
                    - "node . &"
                    - "\n"

    PlanetTargetGroup:
      Type: AWS::ElasticLoadBalancingV2::TargetGroup
      Properties:
        Name: PlanetTargetGroup
        VpcId: vpc-487b7720 #!Ref VPC
        Port: 80
        Protocol: HTTP
        Targets:
        - Id:
            Ref: EC2Instance
          Port: 3000

    PlanetLoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
          Name: PlanetLoadBalancer
          Subnets: 
            - subnet-5222163a
            - subnet-855a38ff
          SecurityGroups:
            - !GetAtt HTTPSecurityGroup.GroupId

    LoadBalancerListener:
      Type: AWS::ElasticLoadBalancingV2::Listener
      Properties:
        LoadBalancerArn: !Ref PlanetLoadBalancer
        Port: 80
        Protocol: HTTP
        DefaultActions:
          - Type: forward
            TargetGroupArn: !Ref PlanetTargetGroup
        

Outputs:
  InstanceId:
    Description: InstanceId of the newly created EC2 instance
    Value: !Ref 'EC2Instance'
  AZ:
    Description: Availability Zone of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, AvailabilityZone]
  PublicDNS:
    Description: Public DNSName of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicDnsName]
  PublicIP:
    Description: Public IP address of the newly created EC2 instance
    Value: !GetAtt [EC2Instance, PublicIp]